# Based on the "trust" template v0.1.2
# https://github.com/japaric/trust/tree/v0.1.2

dist: trusty
language: rust
services: docker
sudo: required

# TODO Rust builds on stable by default, this can be
# overridden on a case by case basis down below.

env:
  global:
    # TODO Update this to match the name of your project.
    - CRATE_NAME=sfz
    - RUST_BACKTRACE: full

matrix:
  # TODO These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  include:
    # Stable channel.
    - env: TARGET=i686-unknown-linux-gnu
    - env: TARGET=i686-unknown-linux-musl
    - env: TARGET=x86_64-unknown-linux-gnu
    - env: TARGET=x86_64-unknown-linux-musl
    - env: TARGET=i686-apple-darwin
      os: osx
    - env: TARGET=x86_64-apple-darwin
      os: osx

    # Beta channel.
    - env: TARGET=i686-unknown-linux-gnu
      rust: beta
    # Disable to reduce CI time
    # - env: TARGET=i686-unknown-linux-musl
    #   rust: beta
    # - env: TARGET=x86_64-unknown-linux-gnu
    #   rust: beta
    # - env: TARGET=x86_64-unknown-linux-musl
    #   rust: beta
    # - env: TARGET=i686-apple-darwin
    #   os: osx
    #   rust: beta
    # - env: TARGET=x86_64-apple-darwin
    #   os: osx
    #   rust: beta

    # Nighly channel.
    - env: TARGET=i686-unknown-linux-gnu
      rust: nightly
    # Disable to reduce CI time
    # - env: TARGET=i686-unknown-linux-musl
    #   rust: nightly
    # - env: TARGET=x86_64-unknown-linux-gnu
    #   rust: nightly
    # - env: TARGET=x86_64-unknown-linux-musl
    #   rust: nightly
    # - env: TARGET=i686-apple-darwin
    #   os: osx
    #   rust: nightly
    # - env: TARGET=x86_64-apple-darwin
    #   os: osx
    #   rust: nightly

before_install:
  - set -e
  - rustup self update

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  # TODO update `api_key.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt 0123456789012345678901234567890123456789
  # - Paste the output down here
  api_key:
    secure: em5I0zBlh1XfrwIbzNWlQ/v71tYKHdRu9mREZPSUQ4RSYyLuSa4mAve0x4TNtU+y7lW47BHKpuUcbcRRjDd5CRmdouYaF6izHSJtHFRYzIczSy8EZQFh6S2A2kXVaoHqNNjOFwjc3fTzKI9mz6b3EBuHLQkfimo7gXaN8GoGoilnSlQOkmUwc3jVyDiXz8mqmZ9kgiSCHILZRE14PnUuRHTKKaNgc+I3dBzsC/9l/YVyyXXftfh5/lAO4B9TIWy6LRPOPnuEjGheFOIf1Qlt3X5J+EiRf2tprdmUstFv1IYNTAy6CQ0tDe/lwcP+tSQZd5TVojldwFvK2P9T/5nIodS0eQrxtycs9vISQe1UvQsatEPWoiuyge05jSp53Pb6vI19gPsuogX0E4q84+mvSgqzVKi0Loc0dnA3IxZ7/mdv3GLYINnIEilPTOxv8nrqWgTMcr44H0/07WHiNLf7RT3KNXmJL1LNeXfhD2u2GrUtDqFqCsthemzbFDLeQb8ptYWxSNMvP25iFum5UI2AAxJRiM+3Q6OHSoRrPd4haNbQ93Rp87L4z5JlU6uH0iI74QsICJaC++vhoJvauAIxrI66hp5M1w3B0RwQ9grsXOn2C8TP0TsAm6K1JnJn3WkfhnoA/H3p5ob/WE6DmTqJk5dx7JuY/FCMtCli6mfybRw=
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  email:
    on_success: never
